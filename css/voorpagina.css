.vboven{

    width: 100%;
    flex: 1 0 auto;       /* grow to fill available space */
    display: flex;
    flex-direction: column;
    position: relative;   /* contains absolute background */
    min-height: 0;        /* allow children to scroll if needed */
}

.vmidden{
    /*
    background-color: #ffe8dd;
    
    */
    background-image: url("/assets/audience.JPG");
    background-size: cover;
    background-repeat: repeat;
    background-position: 50% 50%; 
    width: 100%;
    /* z-index: 20; */             /* removed so stacking for overlay works reliably */
    padding: 15px;

     /* Add a broken white border */
     --border-size: 35px;
     border: var(--border-size) solid rgb(255, 228, 203);
     box-sizing: border-box; /* Ensures padding and border are included in the element's total width/height */

     /* required for the overlay pseudo-element */
     position: relative;
     overflow: visible; /* allow overlay to extend over the border */

     /* Retro control variables */
     /* overall grain intensity 0..1 (lower = subtler) */
     --noise-opacity: 0.5;
     /* noise tile size: bigger = coarser/larger grain */
     --noise-tile-size: 90px;
     /* scanline darkness 0..1 */
     --scanline-opacity: 0.06;
     /* warm tint color and strength */
     --tint-color: 230,140,70; /* rgb values */
     --tint-opacity: 0.12;
     /* vignette strength 0..1 */
     --vignette-opacity: 0.22;
}

/* tint layer (under noise/scanlines but above background)
   extend to cover border by using negative inset equal to the border size */
.vmidden::before{
    content: "";
    position: absolute;
    inset: calc(-1 * var(--border-size)); /* extend over border */
    pointer-events: none;
    z-index: 1;
    /* warm poster tint */
    background: linear-gradient(180deg, rgba(var(--tint-color), calc(var(--tint-opacity) * 1.1)) 0%, rgba(var(--tint-color), calc(var(--tint-opacity) * 0.9)) 60%, transparent 100%);
    mix-blend-mode: multiply;
    opacity: 1;
    transition: opacity .2s;
}

/* noise overlay extended to cover border too */
.vmidden::after{
    content: "";
    position: absolute;
    inset: calc(-1 * var(--border-size)); /* extend over border */
    pointer-events: none;
    z-index: 2;

    /* create a mid-gray base so overlay blending shows both light and dark specks */
    background-color: rgba(128,128,128, calc(var(--noise-opacity) * 0.9) );

    /* scanlines, SVG noise (tiled), vignette */
    background-image:
      repeating-linear-gradient(180deg, rgba(0,0,0,var(--scanline-opacity)) 0 1px, rgba(255,255,255,0) 1px 6px),
      url("data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' preserveAspectRatio='none' width='64' height='64' viewBox='0 0 64 64'><filter id='n'><feTurbulence baseFrequency='0.6' numOctaves='2' type='fractalNoise' stitchTiles='stitch'/><feColorMatrix type='matrix' values='0.5 0 0 0 0  0 0.5 0 0 0  0 0 0.5 0 0  0 0 0 1 0'/></filter><rect width='100%' height='100%' filter='url(%23n)'/></svg>"),
      radial-gradient(ellipse at center, rgba(0,0,0,0) 40%, rgba(0,0,0,var(--vignette-opacity)) 100%);
    background-repeat: repeat, repeat, no-repeat;

    /* use explicit tile size for SVG noise so it tiles at intended grain size */
    background-size: 100% 100%, var(--noise-tile-size) var(--noise-tile-size), cover;

    /* overlay blend makes the mid-gray + noise produce visible grain without simply darkening */
    mix-blend-mode: overlay;

    /* keep overall opacity high (we control intensity via the gray layer + opacity variable) */
    opacity: 1;

    /* subtle punch to make grain readable */
    filter: contrast(110%) brightness(95%);
    image-rendering: auto;
}

/* ensure vmidden content sits above overlays */
.vmidden > * {
    position: relative;
    z-index: 3;
}

/* quick presets */
.vmidden.retro-strong  { --noise-opacity: 0.9; --scanline-opacity: 0.12; --tint-opacity: 0.16; --vignette-opacity: 0.35; }
.vmidden.retro-medium  { --noise-opacity: 0.65; --scanline-opacity: 0.08; --tint-opacity: 0.12; --vignette-opacity: 0.25; }
.vmidden.retro-subtle  { --noise-opacity: 0.35; --scanline-opacity: 0.04; --tint-opacity: 0.06; --vignette-opacity: 0.12; }

.body-background{
    background-image: url("/assets/voorpagina.jpg");
    background-size: cover;
    background-repeat: repeat;
    background-attachment: fixed;
    background-position: 50% 50%;

}


.room{
    margin-bottom: 20px;
}


/*
#check {display: none;}
@media(max-width: 989px){
    .vboven{

        width: 100%;
        height: 70rem;
        background-image: url("/assets/voorpagina2.jpg");
        background-size: cover;
        background-position: 40%;
    }

    
}
*/
.Rubik{
    font-family: Rubik, cursive;
    font-weight: bold;
}
.centerdiv{
    text-align: center;
    /*padding-top: 5px;*/
}

.verticalCenter{
    height: 63px;
    display: flex;
    align-items: center;
    justify-content: center;
}

.buttonbox{
    margin: auto;
    width: 190px;
    height: 63px;
    border-radius: 300px;
    transition: 100ms;
    display: table;
    text-align: center;



    background-color: #f05001;

    /* border: 3px solid #333; */
}

.buttonbox:hover{
    /*border-radius: 315px;
    width: 199.5px;
    height: 66.15px;*/
    scale: 1.1;
    opacity: 0.9;
}

.buttonbox:hover .link{
    /*--margin: 10%;
    margin-top: var(--margin);
    margin-bottom: var(--margin);
    text-decoration: underline;
    font-size: large;*/
    scale: 1.1
}

.link{
    color: white;
    display: block;
    
    margin-top: var(--margin);
    margin-bottom: var(--margin);
    text-decoration: none;
    justify-content: center;
    transition: 100ms ;
}

.update{
    text-shadow:
        0.07em 0 #00000041,
        0 0.07em #00000041,
        -0.07em 0 #00000041,
        0 -0.07em #00000041;
    
    font-size: medium;

}

.upper{
    text-transform: uppercase;
}

.update :hover{
    opacity: 80%;
    scale: 1.00;
    transition-duration: 50ms;
}

.scrolllock{
    overflow-x: hidden
}

.box-split{
    width: 49%;
    height: 500px;
    border: 3px solid #333;
    background-color: #dfdfdf9f;
    float: left;
    margin-left: 0.5%;
}

#check {display: none;}
@media (max-width: 768px){
    .buttonbox{ 
        margin: auto;
        width: 285px; /*waardes keer 1.5*/
        height: 50px;
        border-radius: 450px;
    }
    .buttonbox:hover{
        scale: 1.05 /*waardes keer 1.05*/
    }
    .verticalCenter{
        height: 70px;
        display: flex;
        align-items: center;
        justify-content: center;
    }
    .vmidden{
        /* Add a broken white border */
        border: 20px solid rgb(255, 228, 203);
        box-sizing: border-box; /* Ensures padding and border are included in the element's total width/height */
       }
}

/* Page-level layout to allow .voven to grow and push footer to bottom */
html, body {
    height: 100%;
    margin: 0;
}
body {
    display: flex;
    flex-direction: column;
    min-height: 100vh;
}

/* Ensure header and footer don't grow */
header, footer {
    flex: 0 0 auto;
}

/* Make the hero area fill remaining space */
.voven {
    /* replaced old fixed height with flexible layout */
    width: 100%;
    flex: 1 0 auto;       /* grow to fill available space */
    display: flex;
    flex-direction: column;
    position: relative;   /* contains absolute background */
    min-height: 0;        /* allow children to scroll if needed */
}

#background-div {
    position: absolute; /* absolute relative to .voven */
    inset: 0;           /* top:0; right:0; bottom:0; left:0 */
    width: 100%;
    height: 100%;
    z-index: 0;         /* behind the content inside .voven */
    overflow: hidden;   /* prevent overflow issues */
}

#background-video {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    object-fit: cover; /* Ensure the video covers the container */
    z-index: 0;
}

/* Ensure main content sits above the background video */
.main-flexbox-container-1,
.main-flexbox-container-2,
.main-flexbox-container-3,
.main-flexbox-item,
.buttonbox {
    position: relative;
    z-index: 1;
}

